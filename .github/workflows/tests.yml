name: Tests

on:
  pull_request:
    branches:
      - main
jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Python # Set Python version
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      # Install pip and pytest
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov
          pip install torch==1.12.0+cpu torchvision==0.13.0+cpu torchaudio==0.12.0 --extra-index-url https://download.pytorch.org/whl/cpu
          pip install pyg-lib torch-scatter torch-sparse -f https://data.pyg.org/whl/torch-1.12.0+cpu.html
          pip install torch-geometric
          pip install .
      - name: Test with pytest
        run: |
          pytest --cov=./stable_gnn --cov-report xml tests
      - name: Check test coverage
        id: test-coverage
        uses: johanvanhelden/gha-clover-test-coverage-check@v1
        with:
          percentage: "10"
          filename: "./coverage.xml"
      - name: Generate the badge SVG image
        uses: emibcn/badge-action@v1
        id: badge
        with:
          label: 'Coverage'
          status: ${{ steps.coverage.outputs.coverage }}
          path: ./badges/test-coverage.svg
          color:
            $color:  ${{steps.coverage.outputs.coverage > 90 && 'green'              || 
                        steps.coverage.outputs.coverage > 80 && 'yellow,green'       || 
                        steps.coverage.outputs.coverage > 70 && 'yellow'             ||
                        steps.coverage.outputs.coverage > 60 && 'orange,yellow'      ||
                        steps.coverage.outputs.coverage > 50 && 'orange'             ||
                        steps.coverage.outputs.coverage > 40 && 'red,orange'         ||
                        steps.coverage.outputs.coverage > 30 && 'red,red,orange'     ||
                        steps.coverage.outputs.coverage > 0 && 'red,red,red,orange' ||
                        'red' }}
